{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\OneDrive\\\\Documentos\\\\PRACTICA_REACT\\\\proyectoInterfaces-2704ver\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Footer from \"./Components/Footer/Footer\";\nimport Header from \"./Components/Header/Header\";\nimport Pet from \"./Components/Pet/Pet\";\nimport regularPet from './images/pet-images/pou-regular.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para los atributos de la mascota\n  const [affection, setAffection] = useState(100);\n\n  // Hook de React que te permite ejecutar efectos secundarios en componentes funcionales\n  useEffect(() => {\n    // Función de JavaScript que ejecuta repetidamente una función dada a intervalos establecidos (en milisegundos)\n    const intervalId = setInterval(() => {\n      setAffection(currentAffection => {\n        return currentAffection > 0 ? currentAffection - 1 : 0;\n      });\n    }, 1000 * 1); // decrementa cada 1 segundo \n\n    // Siempre limpiar intervalos (si no pueden aparecer varios intervalos que actuen sobre el componente y provoca situaciones no esperadas)\n    return () => clearInterval(intervalId);\n  }, []); // El array vacío asegura que el efecto se ejecute solo después del montaje\n\n  // Funciones para cambiar el estado\n  const increaseAffection = () => {\n    if (affection >= 0 && affection <= 25) setAffection(affection + 10);\n    if (affection > 25 && affection <= 50) setAffection(affection + 5);\n    if (affection > 50 && affection <= 75) setAffection(affection + 3);\n    if (affection > 75 && affection <= 90) setAffection(affection + 1);\n    if (affection > 90 && affection <= 100) setAffection(affection + 0.5);\n  };\n  const [hungriness, setHungriness] = useState(50);\n  const [cleanliness, setCleanliness] = useState(100);\n  const [petImage, setPetImage] = useState(regularPet);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      petName: \"Roberto\",\n      affection: affection,\n      hungriness: hungriness,\n      cleanliness: cleanliness\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Pet, {\n      image: petImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      onIncreaseAffection: increaseAffection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WTiuEE3VTdOxFtYoe0j03ki8IZg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Footer","Header","Pet","regularPet","jsxDEV","_jsxDEV","App","_s","affection","setAffection","intervalId","setInterval","currentAffection","clearInterval","increaseAffection","hungriness","setHungriness","cleanliness","setCleanliness","petImage","setPetImage","className","children","petName","fileName","_jsxFileName","lineNumber","columnNumber","image","onIncreaseAffection","_c","$RefreshReg$"],"sources":["C:/Users/rebec/OneDrive/Documentos/PRACTICA_REACT/proyectoInterfaces-2704ver/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Footer from \"./Components/Footer/Footer\";\nimport Header from \"./Components/Header/Header\";\nimport Pet from \"./Components/Pet/Pet\";\nimport regularPet from './images/pet-images/pou-regular.png';\n\n\nimport './App.css';\n\n\nfunction App() {\n  // Estado para los atributos de la mascota\n  const [affection, setAffection] = useState(100); \n\n  // Hook de React que te permite ejecutar efectos secundarios en componentes funcionales\n  useEffect(() => {\n    // Función de JavaScript que ejecuta repetidamente una función dada a intervalos establecidos (en milisegundos)\n    const intervalId = setInterval(() => {\n      setAffection((currentAffection) => {\n       \n        return currentAffection > 0 ? currentAffection - 1 : 0;\n      });\n    }, 1000 * 1); // decrementa cada 1 segundo \n\n    // Siempre limpiar intervalos (si no pueden aparecer varios intervalos que actuen sobre el componente y provoca situaciones no esperadas)\n    return () => clearInterval(intervalId);\n  }, []); // El array vacío asegura que el efecto se ejecute solo después del montaje\n\n\n  // Funciones para cambiar el estado\n  const increaseAffection = () => {\n    if (affection >= 0 && affection <= 25) setAffection(affection + 10); \n    if (affection > 25 && affection <= 50) setAffection(affection + 5);\n    if (affection > 50 && affection <= 75) setAffection(affection + 3);\n    if (affection > 75 && affection <= 90) setAffection(affection + 1);\n    if (affection > 90 && affection <= 100) setAffection(affection + 0.5);\n  };\n\n\n  const [hungriness, setHungriness] = useState(50);\n\n  const [cleanliness, setCleanliness] = useState(100);\n\n  const [petImage, setPetImage] = useState(regularPet);\n \n  return (\n    <div className=\"App\">\n    <Header \n      petName=\"Roberto\"\n      affection={affection}\n      hungriness={hungriness}\n      cleanliness={cleanliness}\n    />\n\n    <Pet image={petImage} />\n    \n    <Footer\n      onIncreaseAffection={increaseAffection}\n    />\n  </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,GAAG,MAAM,sBAAsB;AACtC,OAAOC,UAAU,MAAM,qCAAqC;AAG5D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCF,YAAY,CAAEG,gBAAgB,IAAK;QAEjC,OAAOA,gBAAgB,GAAG,CAAC,GAAGA,gBAAgB,GAAG,CAAC,GAAG,CAAC;MACxD,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEd;IACA,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR;EACA,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIN,SAAS,IAAI,CAAC,IAAIA,SAAS,IAAI,EAAE,EAAEC,YAAY,CAACD,SAAS,GAAG,EAAE,CAAC;IACnE,IAAIA,SAAS,GAAG,EAAE,IAAIA,SAAS,IAAI,EAAE,EAAEC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAClE,IAAIA,SAAS,GAAG,EAAE,IAAIA,SAAS,IAAI,EAAE,EAAEC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAClE,IAAIA,SAAS,GAAG,EAAE,IAAIA,SAAS,IAAI,EAAE,EAAEC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAClE,IAAIA,SAAS,GAAG,EAAE,IAAIA,SAAS,IAAI,GAAG,EAAEC,YAAY,CAACD,SAAS,GAAG,GAAG,CAAC;EACvE,CAAC;EAGD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,GAAG,CAAC;EAEnD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACK,UAAU,CAAC;EAEpD,oBACEE,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBjB,OAAA,CAACJ,MAAM;MACLsB,OAAO,EAAC,SAAS;MACjBf,SAAS,EAAEA,SAAU;MACrBO,UAAU,EAAEA,UAAW;MACvBE,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEFtB,OAAA,CAACH,GAAG;MAAC0B,KAAK,EAAET;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExBtB,OAAA,CAACL,MAAM;MACL6B,mBAAmB,EAAEf;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAER;AAACpB,EAAA,CAnDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}