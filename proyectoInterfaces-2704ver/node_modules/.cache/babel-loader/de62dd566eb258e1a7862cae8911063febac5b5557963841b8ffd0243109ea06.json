{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\OneDrive\\\\Documentos\\\\PRACTICA_REACT\\\\proyectoInterfaces-2704ver\\\\src\\\\Ventanas\\\\PantallaPrincipal.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Footer from \"../Components/Footer/Footer\";\nimport Header from \"../Components/Header/Header\";\nimport Pet from \"../Components/Pet/Pet\";\nimport regularPet from '../images/pet-images/pou-regular.png';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PantallaPrincipal() {\n  _s();\n  // Estado para los atributos de la mascota\n  const [affection, setAffection] = useState(100);\n\n  // Hook de React que te permite ejecutar efectos secundarios en componentes funcionales\n  useEffect(() => {\n    // Función de JavaScript que ejecuta repetidamente una función dada a intervalos establecidos (en milisegundos)\n    const intervalId = setInterval(() => {\n      setAffection(currentAffection => {\n        return currentAffection > 0 ? currentAffection - 1 : 0;\n      });\n    }, 1000 * 1); // decrementa cada 1 segundo \n\n    // Siempre limpiar intervalos (si no pueden aparecer varios intervalos que actuen sobre el componente y provoca situaciones no esperadas)\n    return () => clearInterval(intervalId);\n  }, []); // El array vacío asegura que el efecto se ejecute solo después del montaje\n\n  // Funciones para cambiar el estado\n  const increaseAffection = () => {\n    if (affection >= 0 && affection <= 25) setAffection(affection + 10);\n    if (affection > 25 && affection <= 50) setAffection(affection + 5);\n    if (affection > 50 && affection <= 75) setAffection(affection + 3);\n    if (affection > 75 && affection <= 90) setAffection(affection + 1);\n    if (affection > 90 && affection <= 100) setAffection(affection + 0.5);\n  };\n  const [hungriness, setHungriness] = useState(50);\n  const [cleanliness, setCleanliness] = useState(100);\n  const [petImage, setPetImage] = useState(regularPet);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        petName: \"Roberto\",\n        affection: affection,\n        hungriness: hungriness,\n        cleanliness: cleanliness\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pet, {\n        image: petImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        onIncreaseAffection: increaseAffection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(PantallaPrincipal, \"WTiuEE3VTdOxFtYoe0j03ki8IZg=\");\n_c = PantallaPrincipal;\nexport default PantallaPrincipal;\nvar _c;\n$RefreshReg$(_c, \"PantallaPrincipal\");","map":{"version":3,"names":["useState","useEffect","Footer","Header","Pet","regularPet","jsxDEV","_jsxDEV","Fragment","_Fragment","PantallaPrincipal","_s","affection","setAffection","intervalId","setInterval","currentAffection","clearInterval","increaseAffection","hungriness","setHungriness","cleanliness","setCleanliness","petImage","setPetImage","children","className","petName","fileName","_jsxFileName","lineNumber","columnNumber","image","onIncreaseAffection","_c","$RefreshReg$"],"sources":["C:/Users/rebec/OneDrive/Documentos/PRACTICA_REACT/proyectoInterfaces-2704ver/src/Ventanas/PantallaPrincipal.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Footer from \"../Components/Footer/Footer\";\r\nimport Header from \"../Components/Header/Header\";\r\nimport Pet from \"../Components/Pet/Pet\";\r\nimport regularPet from '../images/pet-images/pou-regular.png';\r\nimport '../App.css';\r\n\r\nfunction PantallaPrincipal(){\r\n    // Estado para los atributos de la mascota\r\n  const [affection, setAffection] = useState(100); \r\n\r\n  // Hook de React que te permite ejecutar efectos secundarios en componentes funcionales\r\n  useEffect(() => {\r\n    // Función de JavaScript que ejecuta repetidamente una función dada a intervalos establecidos (en milisegundos)\r\n    const intervalId = setInterval(() => {\r\n      setAffection((currentAffection) => {\r\n       \r\n        return currentAffection > 0 ? currentAffection - 1 : 0;\r\n      });\r\n    }, 1000 * 1); // decrementa cada 1 segundo \r\n\r\n    // Siempre limpiar intervalos (si no pueden aparecer varios intervalos que actuen sobre el componente y provoca situaciones no esperadas)\r\n    return () => clearInterval(intervalId);\r\n  }, []); // El array vacío asegura que el efecto se ejecute solo después del montaje\r\n\r\n\r\n  // Funciones para cambiar el estado\r\n  const increaseAffection = () => {\r\n    if (affection >= 0 && affection <= 25) setAffection(affection + 10); \r\n    if (affection > 25 && affection <= 50) setAffection(affection + 5);\r\n    if (affection > 50 && affection <= 75) setAffection(affection + 3);\r\n    if (affection > 75 && affection <= 90) setAffection(affection + 1);\r\n    if (affection > 90 && affection <= 100) setAffection(affection + 0.5);\r\n  };\r\n\r\n\r\n  const [hungriness, setHungriness] = useState(50);\r\n\r\n  const [cleanliness, setCleanliness] = useState(100);\r\n\r\n  const [petImage, setPetImage] = useState(regularPet);\r\n\r\n  return( <>\r\n        <div className=\"App\">\r\n        <Header \r\n        petName=\"Roberto\"\r\n        affection={affection}\r\n        hungriness={hungriness}\r\n        cleanliness={cleanliness}\r\n        />\r\n\r\n        <Pet image={petImage} />\r\n\r\n        <Footer\r\n         onIncreaseAffection={increaseAffection}\r\n        />\r\n        </div>\r\n    </>\r\n    );\r\n}\r\nexport default PantallaPrincipal;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,GAAG,MAAM,uBAAuB;AACvC,OAAOC,UAAU,MAAM,sCAAsC;AAC7D,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,SAASC,iBAAiBA,CAAA,EAAE;EAAAC,EAAA;EACxB;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,GAAG,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCF,YAAY,CAAEG,gBAAgB,IAAK;QAEjC,OAAOA,gBAAgB,GAAG,CAAC,GAAGA,gBAAgB,GAAG,CAAC,GAAG,CAAC;MACxD,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEd;IACA,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR;EACA,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIN,SAAS,IAAI,CAAC,IAAIA,SAAS,IAAI,EAAE,EAAEC,YAAY,CAACD,SAAS,GAAG,EAAE,CAAC;IACnE,IAAIA,SAAS,GAAG,EAAE,IAAIA,SAAS,IAAI,EAAE,EAAEC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAClE,IAAIA,SAAS,GAAG,EAAE,IAAIA,SAAS,IAAI,EAAE,EAAEC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAClE,IAAIA,SAAS,GAAG,EAAE,IAAIA,SAAS,IAAI,EAAE,EAAEC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAClE,IAAIA,SAAS,GAAG,EAAE,IAAIA,SAAS,IAAI,GAAG,EAAEC,YAAY,CAACD,SAAS,GAAG,GAAG,CAAC;EACvE,CAAC;EAGD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,GAAG,CAAC;EAEnD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAACK,UAAU,CAAC;EAEpD,oBAAQE,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACFlB,OAAA;MAAKmB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBACpBlB,OAAA,CAACJ,MAAM;QACPwB,OAAO,EAAC,SAAS;QACjBf,SAAS,EAAEA,SAAU;QACrBO,UAAU,EAAEA,UAAW;QACvBE,WAAW,EAAEA;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAEFxB,OAAA,CAACH,GAAG;QAAC4B,KAAK,EAAET;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAExBxB,OAAA,CAACL,MAAM;QACN+B,mBAAmB,EAAEf;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC,gBACR,CAAC;AAEP;AAACpB,EAAA,CApDQD,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AAqD1B,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}